# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - main
      - feature/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  project: '**/*.csproj'
  buildConfiguration: 'Debug'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(project)'
  displayName: 'Restore NuGet packages'

- task: SonarCloudPrepare@1
  displayName: "Sonar - Prepare Analysis"
  inputs:
    SonarCloud: 'Sonar Cloud'
    organization: 'singhdivya-2895'
    scannerMode: 'MSBuild'
    projectKey: 'dotnetcore-learning'
    projectName: 'DotnetCore Learning'
    extraProperties: |
      sonar.sources=$(ProjectParentFolder)/$(ProjectName)/
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
      sonar.cs.roslyn.ignoreIssues=true

- task: DotNetCoreCLI@2
  displayName: 'Build project'
  inputs:
    command: 'build'
    projects: '$(project)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator'
  inputs:
    command: custom
    custom: tool
    arguments: 'install --global dotnet-reportgenerator-globaltool'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: 'test'
    arguments: '--no-build --configuration $(buildConfiguration) --logger "trx" /p:CollectCoverage=true /p:CoverletOutputFormat="opencover" /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
    publishTestResults: true
    projects: '**/*Test.csproj'

- script: |
    reportgenerator "-reports:$(Build.SourcesDirectory)/**/coverage.opencover.xml" "-targetDir:$(Build.SourcesDirectory)/**/coverage.opencover.xml" -tag:$(Build.BuildNumber) "-reporttypes:Cobertura;HTMLInline;HTMLChart"
  displayName: 'Create code coverage report'

- task: PublishCodeCoverageResults@1
  displayName: "Publish code coverage"
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)/**/coverage.opencover.xml/Cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)/**/coverage.opencover.xml
    failIfCoverageEmpty: false

- task: SonarCloudAnalyze@1
  displayName: "Sonar - Run Code Analysis"

- task: SonarCloudPublish@1
  displayName: "Sonar - Publish Quality Gate Results"
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: 'Publish Project'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    modifyOutputPath: true
    zipAfterPublish: true

- task: PublishPipelineArtifact@1
  displayName: 'Publish artifact'
  inputs:
    artifactName: 'my-artifact'
    targetPath: '$(Build.ArtifactStagingDirectory)'
